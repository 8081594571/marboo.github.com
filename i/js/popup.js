// Generated by CoffeeScript 1.5.0
var autoSave, copy, defaultTitle, editor, editorSession, getMimeType, goHome, main, mbo, preview, quickNoteDir, recovery, save, updateStatusBar;

goHome = function() {
  return chrome.tabs.create({
    url: chrome.extension.getURL("index.html")
  });
};

mbo = chrome.extension.getBackgroundPage();

editor = "";

editorSession = "";

quickNoteDir = "/quickNotes";

defaultTitle = "UNTITLED.md";

copy = function() {
  var title;
  title = document.getElementById("title");
  return chrome.tabs.getSelected(null, function(tab) {
    return chrome.tabs.sendMessage(tab.id, {
      greeting: "getDom"
    }, function(response) {
      title.value = sprintf("%s.html", response.title);
      return editorSession.setValue(response.content);
    });
  });
};

autoSave = function(t) {
  var path, title;
  title = document.getElementById("title");
  if (!title.value) {
    title.value = t;
  }
  if (mbo.core().valid) {
    path = sprintf("%s%s/%s", mbo.core().sourceDir, quickNoteDir, title.value);
    return mbo.core().saveNote(path, editorSession.getValue());
  } else {
    return mbo.marboo.notify("daemon failed. Please restart");
  }
};

preview = function() {
  var notification, url;
  url = sprintf("notification.html#%s", escape(editorSession.getValue()));
  notification = webkitNotifications.createHTMLNotification(url);
  return notification.show();
};

save = function() {
  var title;
  title = document.getElementById("title");
  autoSave(title.value);
  mbo.marboo.notify(sprintf("saved: %s", title.value));
  return window.close();
};

recovery = function(title) {
  var path;
  path = sprintf("%s/%s", quickNoteDir, title);
  return editorSession.setValue(mbo.core().getContent(path));
};

main = function() {
  var title;
  editor = ace.edit("editor");
  editor.setTheme("ace/theme/github");
  editorSession = editor.getSession();
  editorSession.setMode("ace/mode/markdown");
  editorSession.on('change', function() {
    return autoSave(defaultTitle);
  });
  updateStatusBar(defaultTitle);
  recovery(defaultTitle);
  title = document.getElementById("title");
  return title.oninput = function() {
    var extension;
    extension = title.value.split(".").pop();
    editorSession.setMode(sprintf("ace/mode/%s", getMimeType(extension)));
    return updateStatusBar(title.value);
  };
};

updateStatusBar = function(title) {
  var path, url;
  url = sprintf("file://%s%s/%s.html", mbo.core().buildDir, quickNoteDir, title.value);
  path = sprintf("~/.marboo/source/%s/%s", quickNoteDir, title);
  return document.getElementById("statusBar").innerHTML = path;
};

getMimeType = function(extension) {
  if (extension === "js") {
    return "javascript";
  } else if (extension === "txt") {
    return "text";
  } else if (extension === "htm") {
    return "html";
  } else if (extension === "md") {
    return "markdown";
  } else if (extension === "rb") {
    return "ruby";
  } else if (extension === "py") {
    return "python";
  } else if (extension === "c" || extension === "cpp") {
    return "c_cpp";
  } else {
    return extension;
  }
};

document.addEventListener('DOMContentLoaded', function() {
  document.getElementById("title").focus();
  document.getElementById('main').addEventListener('click', goHome);
  document.getElementById('copyButton').addEventListener('click', copy);
  document.getElementById('saveButton').addEventListener('click', save);
  return main();
});
